#	hexchat-homoglyph.pl
#	Converts text into visually similar yet different characters.
#	Author: William Woodruff
#	------------------------
#	This code is licensed by William Woodruff under the MIT License.
#	http://opensource.org/licenses/MIT

use strict;
use warnings;
use utf8;

use Xchat qw(:all);

my $PLUGIN_NAME = 'homoglyph';
my $PLUGIN_VERS = '1.0';
my $PLUGIN_DESC = 'converts characters into visually similar glyphs';

my %GLYPHS = (
	'!' => ['!', 'ǃ', '！'],
	'"' => ['"', '״', '″', '＂'],
	'$' => ['$', '＄'],
	'%' => ['%', '％'],
	'&' => ['&', '＆'],
	'(' => ['(', '﹝', '（'],
	')' => [')', '﹞', '）'],
	'*' => ['*', '⁎', '＊'],
	'+' => ['+', '＋'],
	',' => [',', '‚', '，'],
	'-' => ['-', '‐', '�－'],
	'.' => ['.', '٠', '۔', '܁', '܂', '․', '‧', '。', '．', '｡'],
	'/' => ['/', '̸', '⁄', '∕', '╱', '⫻', '⫽', '／', 'ﾉ'],
	'0' => ['0', 'O', 'o', 'Ο', 'ο', 'О', 'о', 'Օ', 'Ｏ', 'ｏ'],
	'1' => ['1', 'I', 'ا', '１'],
	'2' => ['2', '２'],
	'3' => ['3', '３'],
	'4' => ['4', '４'],
	'5' => ['5', '５'],
	'6' => ['6', '６'],
	'7' => ['7', '７'],
	'8' => ['8', 'Ց', '８'],
	'9' => ['9', '９'],
	':' => [':', '։', '܃', '܄', '∶', '꞉', '：'],
	';' => [';', ';', '；'],
	'<' => ['<', '‹', '＜'],
	'=' => ['=', '＝'],
	'>' => ['>', '›', '＞'],
	'?' => ['?', '？', '¿'],
	'@' => ['@', '＠'],
	'[' => ['[', '［'],
	'\\' => ['\\', '＼'],
	']' => [']', '］'],
	'^' => ['^', '＾'],
	'_' => ['_', '＿'],
	'`' => ['`', '｀'],
	'a' => ['A', 'a', 'À', 'Á', 'Â', 'Ã', 'Ä', 'Å', 'à', 'á', 'â', 'ã', 'ä', 'å', 'ɑ', 'Α', 'α', 'а', 'Ꭺ', 'Ａ', 'ａ'],
	'b' => ['B', 'b', 'ß', 'ʙ', 'Β', 'β', 'В', 'Ь', 'Ᏼ', 'ᛒ', 'Ｂ', 'ｂ'],
	'c' => ['C', 'c', 'ϲ', 'Ϲ', 'С', 'с', 'Ꮯ', 'Ⅽ', 'ⅽ', 'Ｃ', 'ｃ'],
	'd' => ['D', 'd', 'Ď', 'ď', 'Đ', 'đ', 'ԁ', 'ժ', 'Ꭰ', 'Ⅾ', 'ⅾ', 'Ｄ', 'ｄ'],
	'e' => ['E', 'e', 'È', 'É', 'Ê', 'Ë', 'é', 'ê', 'ë', 'Ē', 'ē', 'Ĕ', 'ĕ', 'Ė', 'ė', 'Ę', 'Ě', 'ě', 'Ε', 'Е', 'е', 'Ꭼ', 'Ｅ', 'ｅ'],
	'f' => ['F', 'f', 'Ϝ', 'Ｆ', 'ｆ'],
	'g' => ['G', 'g', 'ɡ', 'ɢ', 'Ԍ', 'ն', 'Ꮐ', 'Ｇ', 'ｇ'],
	'h' => ['H', 'h', 'ʜ', 'Η', 'Н', 'һ', 'Ꮋ', 'Ｈ', 'ｈ'],
	'i' => ['I', 'i', 'l', 'ɩ', 'Ι', 'І', 'і', 'ا', 'Ꭵ', 'ᛁ', 'Ⅰ', 'ⅰ', 'Ｉ', 'ｉ'],
	'j' => ['J', 'j', 'ϳ', 'Ј', 'ј', 'յ', 'Ꭻ', 'Ｊ', 'ｊ'],
	'k' => ['K', 'k', 'Κ', 'κ', 'К', 'Ꮶ', 'ᛕ', 'K', 'Ｋ', 'ｋ'],
	'l' => ['L', 'l', 'ʟ', 'ι', 'ا', 'Ꮮ', 'Ⅼ', 'ⅼ', 'Ｌ', 'ｌ'],
	'm' => ['M', 'm', 'Μ', 'Ϻ', 'М', 'Ꮇ', 'ᛖ', 'Ⅿ', 'ⅿ', 'Ｍ', 'ｍ'],
	'n' => ['N', 'n', 'ɴ', 'Ν', 'Ｎ', 'ｎ'],
	'o' => ['0', 'O', 'o', 'Ο', 'ο', 'О', 'о', 'Օ', 'Ｏ', 'ｏ'],
	'p' => ['P', 'p', 'Ρ', 'ρ', 'Р', 'р', 'Ꮲ', 'Ｐ', 'ｐ'],
	'q' => ['Q', 'q', 'Ⴍ', 'Ⴓ', 'Ｑ', 'ｑ'],
	'r' => ['R', 'r', 'ʀ', 'Ի', 'Ꮢ', 'ᚱ', 'Ｒ', 'ｒ'],
	's' => ['S', 's', 'Ѕ', 'ѕ', 'Տ', 'Ⴝ', 'Ꮪ', '𐐠', 'Ｓ', 'ｓ'],
	't' => ['T', 't', 'Τ', 'τ', 'Т', 'Ꭲ', 'Ｔ', 'ｔ'],
	'u' => ['U', 'u', 'μ', 'υ', 'Ա', 'Ս', '⋃', 'Ｕ', 'ｕ'],
	'v' => ['V', 'v', 'ν', 'Ѵ', 'ѵ', 'Ꮩ', 'Ⅴ', 'ⅴ', 'Ｖ', 'ｖ'],
	'w' => ['W', 'w', 'ѡ', 'Ꮃ', 'Ｗ', 'ｗ'],
	'x' => ['X', 'x', 'Χ', 'χ', 'Х', 'х', 'Ⅹ', 'ⅹ', 'Ｘ', 'ｘ'],
	'y' => ['Y', 'y', 'ʏ', 'Υ', 'γ', 'у', 'Ү', 'Ｙ', 'ｙ'],
	'z' => ['Z', 'z', 'Ζ', 'Ꮓ', 'Ｚ', 'ｚ'],
	'{' => ['{', '｛'],
	'|' => ['|', 'ǀ', 'ا', '｜'],
	'}' => ['}', '｝'],
	'~' => ['~', '⁓', '～']
);

register($PLUGIN_NAME, $PLUGIN_VERS, $PLUGIN_DESC, \&on_unload);
Xchat::printf("Loaded %s version %s", $PLUGIN_NAME, $PLUGIN_VERS);

sub on_unload {
	Xchat::printf("%s version %s unloaded.", $PLUGIN_NAME, $PLUGIN_VERS);
}

hook_command('hg', \&homoglyphify, {help_text => "Usage: /hg <text> to homoglyphify the given text."});

sub homoglyphify {
	my $text = lc($_[1][1]);
	my $result = '';

	foreach (split //, $text) {
		if (exists $GLYPHS{$_}) {
			my @glyphs = @{$GLYPHS{$_}};
			$result .= $glyphs[rand @glyphs];
		}
		else {
			$result .= $_;
		}
	}

	command("say $result");

	return EAT_ALL;
}
