#!/usr/bin/env ruby

# kbsecret-todo-list: list kbsecret todo records more flexibly

require "kbsecret"
require "slop"

opts = Slop.parse suppress_errors: true do |o|
  o.banner = <<~EOS
    List todo records by status and optionally with extra detail.

    Usage:
      kbsecret todo-list <started|suspended|completed>

    Examples:
      kbsecret todo-list started
      kbsecret todo-list suspended --detail
      kbsecret todo-list -s todos completed
  EOS

  o.string "-s", "--session", "the session name", default: :default
  o.bool "-d", "--detail", "list the full todo text"

  o.on "-h", "--help" do
    puts o
    exit
  end

  o.on "--introspect-flags" do
    subcmds = ["started", "suspended", "completed"]
    comp = o.options.flat_map { |o| o.flags } + subcmds
    puts comp.join "\n"
    exit
  end
end

sess_name = opts[:session]

unless KBSecret::Config.session? sess_name
  abort "Fatal: Unknown session: '#{sess_name}'."
end

session = KBSecret::Session.new label: sess_name

todo_records = session.records.select { |r| r.type == "todo" }

subcommand = opts.args.shift

case subcommand
when "started"
  selected_records = todo_records.select(&:started?)
when "suspended"
  selected_records = todo_records.select(&:suspended?)
when "completed"
  selected_records = todo_records.select(&:completed?)
else
  abort("Fatal: Unknown action: '#{subcommand}'.")
end

selected_records.each do |record|
  if opts.detail?
    puts "#{record.label} - #{record.todo}"
  else
    puts record.label
  end
end
