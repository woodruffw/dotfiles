#!/usr/bin/env ruby
# frozen_string_literal: true

# kbsecret-zxcvbn: Estimate the strength of passwords in login records
# using the Ruby port of Dropbox's zxcvbn

require "kbsecret"

begin
  require "zxcvbn"
rescue LoadError
  abort("Fatal: You need zxcvbn: `gem install zxcvbn-ruby`")
end

include KBSecret

cmd = CLI.create do |c|
  c.slop do |o|
    o.banner = <<~HELP
      Usage: kbsecret zxcvbn [options] <record [record ...]>
    HELP

    o.string "-s", "--session", "the session to estimate in", default: :default
    o.bool "-a", "--all", "check all login records, not just listed ones"
    o.float "-e", "--entropy", "warn at any password below this entropy", default: 30.0
    o.int "-S", "--score", "warn at any password below this score", default: 2
  end

  unless c.opts.all?
    c.dreck do
      list :string, :labels
    end
  end

  c.ensure_session!
end

records = cmd.session.records :login
tester  = Zxcvbn::Tester.new

selected_records = if cmd.opts.all?
                     records
                   else
                     records.select do |record|
                       cmd.args[:labels].include? record.label
                     end
                   end

cmd.bye "No logins to estimate." if selected_records.empty?

selected_records.each do |record|
  score = tester.test(record.password, [record.username])

  cmd.verbose "#{record}: #{score.entropy} (score: #{score.score})"

  if score.entropy < cmd.opts[:entropy]
    puts "#{CLI::RED["Warning"]}: Low entropy in #{record} " \
      "(#{score.entropy}, wanted at least #{cmd.opts[:entropy]})!"
  end

  if score.score < cmd.opts[:score]
    puts "#{CLI::RED["Warning"]}: Low score in #{record} " \
      "(#{score.score}, wanted at least #{cmd.opts[:score]})!"
  end
end
