#!/usr/bin/env ruby
# frozen_string_literal: true

# kbsecret-audit-pass: Scan login records for passwords on pwnedpasswords.com.
# Uses k-anonymity to avoid sending either passwords or full password hashes.

require "kbsecret"
require "digest"
require "open-uri"

include KBSecret

cmd = CLI.create do |c|
  c.slop do |o|
    o.banner = <<~HELP
      Usage:
        kbsecret audit-pass [options] <record [record ...]>
    HELP

    o.string "-s", "--session", "the session to audit in", default: :default
    o.bool "-a", "--all", "audit all login records, not just listed ones"
  end

  unless c.opts.all?
    c.dreck do
      list :string, :labels
    end
  end

  c.ensure_session!
end

records = cmd.session.records :login

selected_records = if cmd.opts.all?
                     records
                   else
                     records.select do |record|
                       cmd.args[:labels].include? record.label
                     end
                   end

cmd.bye "No logins to audit." if selected_records.empty?

selected_records.each do |record|
  cmd.verbose "Auditing #{record.label}..."

  digest = Digest::SHA1.hexdigest(record.password).upcase
  prefix = digest[0, 5]

  lines = open("https://api.pwnedpasswords.com/range/#{prefix}").read.split("\r\n")
  matches = lines.map do |line|
    suffix, count, = line.split(":")

    ["#{prefix}#{suffix}", count]
  end.to_h

  if matches.include?(digest)
    puts "#{CLI::RED["Warning"]}: #{record.label}'s password has #{matches[digest]} hits on HIBP!"
  end

  # HIBP is rate limited at 1 req/1500ms, so sleep for 2 secs to be on the safe side
  sleep 2
end
