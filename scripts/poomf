#!/usr/bin/env bash

# poomf.sh - puush-like functionality for teknik.io

function info() {
	notify-send --urgency=critical $@
}

function fullscreen_screenshot()
{
	local cmd=

	if [[ `which gnome-screenshot 2> /dev/null` ]]; then
		cmd="gnome-screenshot -f $1"
	elif [[ `which scrot 2> /dev/null` ]]; then
		cmd="scrot $1"
	else
		info "Nothing to take a screenshot with."
		exit 255
	fi

	eval "$cmd"
}

function selection_screenshot()
{
	local cmd=

	if [[ `which gnome-screenshot 2> /dev/null` ]]; then
		cmd="gnome-screenshot -a -f $1"
	elif [[ `which scrot 2> /dev/null` ]]; then
		cmd="scrot -s $1"
	else
		info "Nothing to take a screenshot with."
		exit 255
	fi

	eval "$cmd"
}

# get options
while getopts fhsu: option ; do
	case $option in
		f)	fullscreen=1
			;;
		h)	help=1
			;;
		s)	selection=1
			;;
		u)	upload=1
			;;
		*)	exit
			;;
	esac
done

# take fullscreen picture
if [[ $fullscreen ]]; then
	file=$(filename=~/Dropbox/screenshots/$(date +%s).png ; fullscreen_screenshot $filename ; printf $filename)
fi

# display help
if [[ $help ]]; then
	printf "%s\t\t%s\n" "-f" "fullscreen"
	printf "%s\t\t%s\n" "-h" "show this message"
	printf "%s\t\t%s\n" "-s" "selection"
	printf "%s\t\t%s\n" "-u file" "file upload"
	exit
fi

# take selection picture
if [[ $selection ]]; then
	file=$(filename=~/Dropbox/screenshots/$(date +%s).png ; selection_screenshot $filename ; printf $filename)
fi

# get file
if [[ $upload ]]; then
	file=$(printf $2)
fi

if [[ -n $file ]]; then
	output=$(curl --silent -sf -F file="@${file}" "https://api.teknik.io/upload/post")

	if [[ -n $output ]]; then
		url=$(echo ${output} | jq -M -r ".[0].results.file.url")
		success=1
	fi
fi

if [[ $success ]]; then
	# copy link to clipboard
	printf $url | xclip -selection primary
	printf $url | xclip -selection clipboard
	# notify user of completion
	info "pomf!" "$url"
else
	info "%s\n" "file was not uploaded, did you specify a valid filename?"
fi
