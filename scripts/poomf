#!/usr/bin/env bash

# poomf.sh - puush-like functionality for teknik.io

function info() {
	notify-send --urgency=critical ${@}
}

function check_dependencies() {
	local deps=(notify-send zenity xclip curl jq)

	for dep in "${deps[@]}"; do
		if [[ ! $(which ${dep} 2>/dev/null) ]]; then
			printf "Missing dependency '${dep}', please install it.\n"
			exit 1
		fi
	done
}

function fullscreen_screenshot()
{
	local cmd=

	if [[ $(which gnome-screenshot 2> /dev/null) ]]; then
		cmd="gnome-screenshot -f ${1}"
	elif [[ $(which scrot 2> /dev/null) ]]; then
		cmd="scrot ${1}"
	else
		info "Nothing to take a screenshot with."
		exit 255
	fi

	eval "$cmd"
}

function selection_screenshot()
{
	local cmd=

	if [[ $(which gnome-screenshot 2> /dev/null) ]]; then
		cmd="gnome-screenshot -a -f ${1}"
	elif [[ $(which scrot 2> /dev/null) ]]; then
		cmd="scrot -s ${1}"
	else
		info "Nothing to take a screenshot with."
		exit 255
	fi

	eval "$cmd"
}

[[ -f ~/.api-keys/srht-api ]] && source ~/.api-keys/srht-api

check_dependencies

# get options
while getopts ifhsu: option; do
	case "${option}" in
		i)	interactive=1 ;;
		f)	fullscreen=1 ;;
		h)	usage=1 ;;
		s)	selection=1 ;;
		u)	upload=1
			file="${OPTARG}" ;;
		*)	exit ;;
	esac
done

if [[ ${interactive} ]]; then
	file=$(zenity --file-selection)
fi

# take fullscreen picture
if [[ ${fullscreen} ]]; then
	file=$(filename=~/Dropbox/screenshots/$(date +%s).png ; fullscreen_screenshot ${filename} ; printf ${filename})
fi

# display help
if [[ ${usage} ]]; then
	printf "%s\t\t%s\n" "-f" "fullscreen"
	printf "%s\t\t%s\n" "-h" "show this message"
	printf "%s\t\t%s\n" "-s" "selection"
	printf "%s\t\t%s\n" "-u file" "file upload"
	exit
fi

# take selection picture
if [[ ${selection} ]]; then
	file=$(filename=~/Dropbox/screenshots/$(date +%s).png ; selection_screenshot ${filename} ; printf ${filename})
fi

if [[ -n ${file} ]]; then
	if [[ -n ${SRHT_API_KEY} ]]; then
		output=$(curl -sf -F key=${SRHT_API_KEY} -F file="@${file}" "https://sr.ht/api/upload")

		if [[ -n ${output} ]]; then
			url=$(echo ${output} | jq -M -r ".url")
			success=1
		fi
	else
		output=$(curl -sf -F file="@${file}" "https://api.teknik.io/upload/post")

		if [[ -n ${output} ]]; then
			url=$(echo ${output} | jq -M -r ".[0].results.file.url")
			success=1
		fi
	fi
fi

if [[ ${success} ]]; then
	# copy link to clipboard
	printf ${url} | xclip -selection primary
	printf ${url} | xclip -selection clipboard
	# notify user of completion
	info "pomf!" "$url"
else
	info "%s\n" "file was not uploaded, did you specify a valid filename?"
fi
